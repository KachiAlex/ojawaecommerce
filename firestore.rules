rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection - users can read/write their own profile
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow read: if isAdmin(); // Admins can read all user profiles
    }
    
    // Products collection - anyone can read, only admins can write
    match /products/{productId} {
      allow read: if true; // Public read access for products
      allow write: if isAdmin(); // Only admins can create/update/delete products
    }
    
    // Categories collection - anyone can read, only admins can write
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Orders collection - users can read/write their own orders
    match /orders/{orderId} {
      allow read, write: if isOwner(resource.data.userId);
      allow read: if isAdmin(); // Admins can read all orders
    }
    
    // Cart collection - users can read/write their own cart
    match /carts/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Reviews collection - authenticated users can read, users can write their own reviews
    match /reviews/{reviewId} {
      allow read: if true; // Public read access
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      allow update, delete: if isOwner(resource.data.userId) || isAdmin();
    }
  }
}